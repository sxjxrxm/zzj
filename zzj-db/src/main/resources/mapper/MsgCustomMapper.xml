<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.zzj.db.dao.MsgCustomMapper" >
	<!--查询结果数据结构定义-->
  <resultMap id="BaseResultMap" type="com.zzj.db.dto.MsgCustom" >
    <id column="ID" property="id" jdbcType="BIGINT" />
    <result column="MID" property="mid" jdbcType="BIGINT" />
    <result column="CUSTOM_DATA" property="customData" jdbcType="VARCHAR" />
    <result column="CUSTOM_DESC" property="customDesc" jdbcType="VARCHAR" />
    <result column="EXT" property="ext" jdbcType="VARCHAR" />
    <result column="SOUND" property="sound" jdbcType="VARCHAR" />
    <result column="MSG_SEQ" property="msgSeq" jdbcType="INTEGER" />
  </resultMap>
  <!--查询结果列定义-->
  <sql id="Base_Column_List" >
    ID, MID, CUSTOM_DATA, CUSTOM_DESC, EXT, SOUND, MSG_SEQ
  </sql>
  <!--根据主键查询msg_custom中指定记录-->
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from msg_custom
    where ID = #{id,jdbcType=BIGINT}
  </select>
  <!--根据主键删除msg_custom中指定记录-->
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from msg_custom
    where ID = #{id,jdbcType=BIGINT}
  </delete>
  <!--插入指定记录-->
  <insert id="insert" parameterType="com.zzj.db.dto.MsgCustom" >
    insert into msg_custom (ID, MID, CUSTOM_DATA, 
      CUSTOM_DESC, EXT, SOUND, MSG_SEQ
      )
    values (#{id,jdbcType=BIGINT}, #{mid,jdbcType=BIGINT}, #{customData,jdbcType=VARCHAR}, 
      #{customDesc,jdbcType=VARCHAR}, #{ext,jdbcType=VARCHAR}, #{sound,jdbcType=VARCHAR}, #{msgSeq,jdbcType=INTEGER}
      )
  </insert>
  <!--有条件的插入指定记录-->
  <insert id="insertSelective" parameterType="com.zzj.db.dto.MsgCustom" >
    insert into msg_custom
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        ID,
      </if>
      <if test="mid != null" >
        MID,
      </if>
      <if test="customData != null" >
        CUSTOM_DATA,
      </if>
      <if test="customDesc != null" >
        CUSTOM_DESC,
      </if>
      <if test="ext != null" >
        EXT,
      </if>
      <if test="sound != null" >
        SOUND,
      </if>
      <if test="msgSeq != null" >
        MSG_SEQ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="mid != null" >
        #{mid,jdbcType=BIGINT},
      </if>
      <if test="customData != null" >
        #{customData,jdbcType=VARCHAR},
      </if>
      <if test="customDesc != null" >
        #{customDesc,jdbcType=VARCHAR},
      </if>
      <if test="ext != null" >
        #{ext,jdbcType=VARCHAR},
      </if>
      <if test="sound != null" >
        #{sound,jdbcType=VARCHAR},
      </if>
      <if test="msgSeq != null" >
        #{msgSeq,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <!--根据条件更新msg_custom中指定记录-->
  <update id="updateByPrimaryKeySelective" parameterType="com.zzj.db.dto.MsgCustom" >
    update msg_custom
    <set >
      <if test="mid != null" >
        MID = #{mid,jdbcType=BIGINT},
      </if>
      <if test="customData != null" >
        CUSTOM_DATA = #{customData,jdbcType=VARCHAR},
      </if>
      <if test="customDesc != null" >
        CUSTOM_DESC = #{customDesc,jdbcType=VARCHAR},
      </if>
      <if test="ext != null" >
        EXT = #{ext,jdbcType=VARCHAR},
      </if>
      <if test="sound != null" >
        SOUND = #{sound,jdbcType=VARCHAR},
      </if>
      <if test="msgSeq != null" >
        MSG_SEQ = #{msgSeq,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=BIGINT}
  </update>
  <!--根据主键更新msg_custom中指定记录-->
  <update id="updateByPrimaryKey" parameterType="com.zzj.db.dto.MsgCustom" >
    update msg_custom
    set MID = #{mid,jdbcType=BIGINT},
      CUSTOM_DATA = #{customData,jdbcType=VARCHAR},
      CUSTOM_DESC = #{customDesc,jdbcType=VARCHAR},
      EXT = #{ext,jdbcType=VARCHAR},
      SOUND = #{sound,jdbcType=VARCHAR},
      MSG_SEQ = #{msgSeq,jdbcType=INTEGER}
    where ID = #{id,jdbcType=BIGINT}
  </update>
</mapper>